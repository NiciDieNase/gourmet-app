apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"
apply plugin: "androidx.navigation.safeargs.kotlin"

String appName = "GenieÃŸer-App"
String versionString = new File("versionfile").text.trim()

def getMyVersionCode = { ->
    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : 1
    println "VersionCode is set to $code"
    return code
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "de.nicidienase.geniesser_app"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode getMyVersionCode()
        versionName versionString
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [label: appName]
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        //noinspection GroovyMissingReturnStatement, GroovyAssignabilityCheck
        release {
            if (project.hasProperty("gourmetKeyStore") && file(gourmetKeyStore).exists() && file(gourmetKeyStore).isFile()) {
                println "Release app signing is configured: will sign APK"
                storeFile file(gourmetKeyStore)
                storePassword gourmetStorePassword
                keyAlias gourmetKeyName
                keyPassword gourmetKeyPassword
            } else {
                println "App signing data not found. Will not sign."
            }
        }
    }

    buildTypes {
        debug {
            manifestPlaceholders = [label: appName + "-Debug"]
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (project.hasProperty("gourmetKeyStore") && file(gourmetKeyStore).exists() && file(gourmetKeyStore).isFile()) {
                signingConfig signingConfigs.release
            }
        }
    }

    flavorDimensions "stage"
    productFlavors {
        prod {
            dimension "stage"
            buildConfigField "String", "APPCENTER_ID", "$gourmetAppcenterId"
        }
        dev {
            dimension "stage"
            applicationIdSuffix ".dev"
            manifestPlaceholders = [label: appName + "-DEV"]
            buildConfigField "String", "APPCENTER_ID", "$gourmetAppcenterDevId"
        }
    }
    dataBinding{
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0-M2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0-M2'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'com.google.android.material:material:1.1.0-alpha10'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'

    def room_version = "2.1.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    def nav_version_ktx = "2.1.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version_ktx"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version_ktx"

    def appCenterSdkVersion = '2.2.0'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"

    def glideVersion = '4.9.0'
    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    kapt "com.github.bumptech.glide:compiler:${glideVersion}"

    implementation "com.squareup.retrofit2:retrofit:2.6.0"
    implementation "com.squareup.retrofit2:converter-gson:2.6.0"

    debugImplementation 'com.facebook.stetho:stetho:1.5.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-alpha-3'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
